<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: prawn | Fun On Rails]]></title>
  <link href="http://funonrails.com/categories/prawn/atom.xml" rel="self"/>
  <link href="http://funonrails.com/"/>
  <updated>2014-04-02T15:54:48+05:30</updated>
  <id>http://funonrails.com/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PDF in rails using prawn library]]></title>
    <link href="http://funonrails.com/2010/08/pdf-in-rails-using-prawn-library/"/>
    <updated>2010-08-01T16:45:00+05:30</updated>
    <id>http://funonrails.com/2010/08/pdf-in-rails-using-prawn-library</id>
    <content type="html"><![CDATA[<p>Building PDF Document in ruby &amp; rails application using prawn Library
<strong>Brief</strong>. Before getting started with this tutorial, I would like to thanks <strong>Greg and
Prawn team</strong> for their awesome work towards ruby and rails community</p>

<h2>Installing prawn (core, layout, format, security)</h2>

<p><code>
gem install prawn
</code>
or
Add following line in rails environment file inside initializer block
<code>
config.gem 'prawn'
</code>
Optionally you can specify version to be used and then run task
<code>
rake gems:install
</code>
Generating pdf using rails console</p>

<p><code>
ruby script/console
pdf = Prawn::Document.new
</code>
It creates new pdf document object. Here you can additionally pass options parameters such as &ndash;</p>

<p>```ruby
Prawn::Document.new(:page_size   => [11.32, 8.49], :page_layout => :portrait)
Prawn::Document.new(A0) Here A0 is page size.
Prawn::Document.new(:page_layout => :portrait,</p>

<pre><code>                 :left_margin =&gt; 10.mm,    # different
                 :right_margin =&gt; 1.cm,    # units
                 :top_margin =&gt; 0.1.dm,    # work
                 :bottom_margin =&gt; 0.01.m, # well
                 :page_size =&gt; 'A4')
</code></pre>

<p>pdf.text(&ldquo;Prawn Rocks&rdquo;)
=> 12
 pdf.render_file(&lsquo;prawn.pdf&rsquo;)
=> #&lt;file:prawn.pdf (closed)=&ldquo;&rdquo;>&lt;/file:prawn.pdf>
```
Here is output file generated
<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/prawn.pdf">click</a></p>

<p>Now let&rsquo;s go through other goodness of prawn library
<code>
pdf  = Prawn::Document.new('A3') do
</code></p>

<h2>FONTS</h2>

<p><a href="http://github.com/sandipransing/prawn-example/raw/master/sample/font.pdf">click</a>
```</p>

<h1>Specify font to be used or specify path to font file.</h1>

<p>font &ldquo;times.ttf&rdquo;
font(&ldquo;/times.ttf&rdquo;)
```</p>

<h2>TEXT</h2>

<p><a href="http://github.com/sandipransing/prawn-example/raw/master/sample/font.pdf">click</a></p>

<p><code>
text 'Sandip Ransing', :size =&gt; 41, :position =&gt; :center, :style =&gt; :bold
</code></p>

<h2>STROKE LINE</h2>

<p><a href="http://github.com/sandipransing/prawn-example/raw/master/sample/stroke.pdf">click</a>
```
stroke do</p>

<pre><code>  rectangle [300,300], 100, 200
</code></pre>

<p> end
```</p>

<h2>IMAGE</h2>

<p><a href="http://github.com/sandipransing/prawn-example/raw/master/sample/image.pdf">click</a></p>

<p>Displaying Local file system Image
```
image &lsquo;sandip.png&rsquo;, :height => 50, :position => :center, :border => 2
Scale Image</p>

<p>image &lsquo;sandip.png&rsquo;, :scale => 0.5, :position => :left
Display Remote image from Internet inside pdf</p>

<p>require &ldquo;open-uri&rdquo;
 image open(&lsquo;<a href="http://t2.gstatic.com/images?q=tbn:kTG6gAKrnou2gM:http://www.facebook.com/profile/pic.php?uid=AAAAAQAQrLXvTWfyY2ANjttV8D1c0QAAAAnDHPFJe0pPFR84iIzXPKro&amp;t=1">http://t2.gstatic.com/images?q=tbn:kTG6gAKrnou2gM:http://www.facebook.com/profile/pic.php?uid=AAAAAQAQrLXvTWfyY2ANjttV8D1c0QAAAAnDHPFJe0pPFR84iIzXPKro&amp;t=1</a>")
end
```</p>

<h2>LINE BREAKS</h2>

<p>```
movedown(20)</p>

<p>```</p>

<h2>TABLE/GRID</h2>

<p><a href="http://github.com/sandipransing/prawn-example/raw/master/sample/table.pdf">click</a>
```
data = [</p>

<pre><code>["Name", {:text =&gt; 'Sandip Ransing', :font_style =&gt; :bold, :colspan =&gt; 4 }],
["Address", {:text =&gt; 'SHIVAJINAGAR, PUNE 411005', :colspan =&gt; 4 }],
["Landmark",{:text =&gt; 'NEAR FC COLLEGE', :colspan =&gt; 4 }],
["Mobile","9860648108", {:text =&gt; "", :colspan =&gt; 3 }],
["Education", {:text =&gt; "Bachelor in Computer Engineering", :colspan =&gt; 4 }],
  ["Vehicle", 'Hero Honda',"Reg. No.", {:text =&gt; "MH 12 EN 921", :colspan =&gt; 3 }],
  ["Additional", "GDCA", "class", 'First', ""],
  [{:text =&gt; "Areas of Speciality", :font_style =&gt; :bold}, {:text =&gt; "Ruby, Rails, Radiant, Asterisk, Adhearsion, Geokit, Prawn, ....,...", :font_style =&gt; :bold, :colspan =&gt; 4}],
  [{:text =&gt; "Website", :colspan =&gt; 2},{:text =&gt; "www.funonrails.com", :colspan =&gt; 3}],
  [{:text =&gt; "Company", :colspan =&gt; 2},{:text =&gt; "Josh Software", :colspan =&gt; 3}]
</code></pre>

<p>  ]
table data,</p>

<pre><code>:border_style =&gt; :grid, #:underline_header
:font_size  =&gt; 10, 
:horizontal_padding =&gt; 6,
:vertical_padding   =&gt; 3,
:border_width =&gt; 0.7, 
:column_widths =&gt; { 0 =&gt; 130, 1 =&gt; 100, 2 =&gt; 100, 3 =&gt; 100, 4 =&gt; 80 }, 
:position =&gt; :left,
:align =&gt; { 0 =&gt; :left, 1 =&gt; :right, 2 =&gt; :left, 3 =&gt; :right, 4 =&gt; :right }
</code></pre>

<p>```</p>

<h2>LINKS</h2>

<p><a href="http://github.com/sandipransing/prawn-example/raw/master/sample/link.pdf">click</a>
<code>
link_annotation([200, 200, 500, 40],:Border =&gt; [0,0,1], :A =&gt; { :Type =&gt; :Action, :S =&gt; :URI, :URI =&gt; Prawn::LiteralString.new("http://twitter.com/sandipransing") } )
link_annotation(([0, 100, 100, 150]), :Border =&gt; [0,0,1], :Dest =&gt; s"http://funonrails.com")
</code></p>

<h2>PDF Security</h2>

<p><a href="http://github.com/sandipransing/prawn-example/raw/master/sample/secure.pdf">click</a>
```
encrypt_document :user_password => &lsquo;hello&rsquo;, :owner_password => &lsquo;railer&rsquo;,</p>

<pre><code>:permissions =&gt; { :print_document =&gt; false }
</code></pre>

<p>```</p>

<h2>Prawn Inline Formatting</h2>

<p>Prawn-format supports inline text formatting that gives user enough flexibility to use html tags</p>

<p><code>
require 'prawn/format'
text 'This is Strong  text', :inline_format =&gt; true
text 'This is bold text \n It should be on newline.', :inline_format =&gt; true
</code></p>

<h2>SAVE Generated PDF</h2>

<p><code>
end
pdf.render_file 'my.pdf'
</code>
!!! NOTE: As of time now &lsquo;prawn-format&rsquo; is incompatible with latest prawn gem, It is compatible with prawn version &lt;= 0.6 s</p>
]]></content>
  </entry>
  
</feed>
