<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vim | Fun On Rails]]></title>
  <link href="funonrails.com/categories/vim/atom.xml" rel="self"/>
  <link href="funonrails.com/"/>
  <updated>2014-02-21T02:23:40+05:30</updated>
  <id>funonrails.com/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim editor for ruby on rails development using rails.vim]]></title>
    <link href="funonrails.com/2010/02/vim-editor-for-ruby-on-rails/"/>
    <updated>2010-02-19T20:20:00+05:30</updated>
    <id>funonrails.com/2010/02/vim-editor-for-ruby-on-rails</id>
    <content type="html"><![CDATA[<h4>Vim install On CentOS</h4>

<p><code>
yum install vim-enhanced
</code></p>

<h4>Vim install on Ubuntu machine</h4>

<p>Install vim-full using command
<code>
apt-get install vim
</code></p>

<p>While coding with ruby, html, erb, haml, js and stylesheets.
It is great pain to indent code. Using rails vim one can easily keep code always indented.</p>

<p>This increases code readability and minimizes effort, bugs and finally proves ease of using vim editor.</p>

<p><code>rails.vim</code> script contains lot of syntax highlighter and indentation plugins that really helps development needs.</p>

<p>If you have git installed then clone it under .vim directory of your profile
<code>
git clone git://github.com/sandipransing/rails_vim.git ~/.vim
</code></p>

<h4>To install from zip file download and extract it inside <code>~/.vim</code> directory</h4>

<p>Command to <a href="http://www.vim.org/scripts/download_script.php?src_id=11920">download</a> from console
<code>
wget http://www.vim.org/scripts/download_script.php?src_id=11920 /rails.vim
</code>
This is how my editor looks like</p>

<p><a href="http://1.bp.blogspot.com/_WmOmsgqsanw/S5voyvHVstI/AAAAAAAAAJI/bi-mSfyN5no/s1600-h/IDE.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="215" src="http://1.bp.blogspot.com/_WmOmsgqsanw/S5voyvHVstI/AAAAAAAAAJI/bi-mSfyN5no/s400/IDE.png" width="500" /></a></p>

<p>Open your ~/.bashrc and at the bottom add:</p>

<p><code>
alias vi=vim
export EDITOR=vim
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get hand over VI / VIM editor]]></title>
    <link href="funonrails.com/2009/11/get-hand-over-vi-vim-editor/"/>
    <updated>2009-11-18T01:20:00+05:30</updated>
    <id>funonrails.com/2009/11/get-hand-over-vi-vim-editor</id>
    <content type="html"><![CDATA[<div class='post'>
<span style="font-family: Arial; font-size: small;"><span style="background-color: white; font-size: 13px;"> </span></span><br /><span style="font-family: Arial; font-size: small;"><span style="background-color: white; font-size: 13px;"><pre><b><span style="color: #351c75;">Movements</span></b></pre><pre>b   previous word<br />w   next word<br />e        end of word<br />0/^      begining of line<br />$        end of line<br />G        end of file<br />1G/gg    begining of file<br />/pattern  search next<br />?pattern  search previous<br />n         repeat    search forword ( i.e next occurence )<br />N         repeat    search backword<br />:line     goto line specified<br /><br />  *****Modes****<br />  i   insert mode<br />  r   replace mode<br />  s   delete character under cursor and eneter insert mode<br /><br />  *****Delete******<br />  x    delete character under cursor<br />  dd   delete current line<br />  line dd delete number of lines specified<br /><br />  ****copy********<br />  yy        copy current line<br />  pp        print copied contents<br />  line yy   copy number of lines specified<br /><br />  *******visual******<br /><br />  v     enter visual mode<br />  aw    highlight word<br />  as    highlight sentence<br />  ap    highlight paragraph<br />  ab    highlight block<br /><br />  ******undo/redo******<br />  u       undo<br />  cntrl+r redo<br /><br />  ******autocomplete****<br />  cntrl+x   enter completion mode<br />  cntrl+p   display autocomplete options<br /><br />  ******uppercase/lowercase*****<br />  guu   lowercase line<br />  gUU   uppercase line<br /><br />  *******Regx replace****<br /><br />  range s/foo/bar/arg - replace foo with bar in ‘range’ with<br /><br />  Values of 'range':<br />  %               whole file<br />  number          that particular line<br />  none            apply to current line only<br /><br />  values of 'arg':<br />  none  apply to first occurrence<br />  g     global (all occurrences)<br /><br />Select/Macros<br />  qchar      start recording macro storing it in register ‘char’<br />  q          end recording<br />  @char      replay the macro stored in ‘char’<br />  :1,10 norm! @char run the macro stored in ‘char’ over the 1-10 line range<br /></pre></span></span><br /></div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>Sandip Ransing</div>
<div class='content'>
Remove blank lines in vim<br /><br />:g/^ *$/d</div>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vi / vim Shortcuts]]></title>
    <link href="funonrails.com/2009/05/vi-vim-shortcuts/"/>
    <updated>2009-05-22T18:23:00+05:30</updated>
    <id>funonrails.com/2009/05/vi-vim-shortcuts</id>
    <content type="html"><![CDATA[<p>As i am newb on linux macine, i dont know vi shortcuts.
so, i am listing down shortcuts which i am getting familier :)</p>

<p>```</p>

<h1>Open file</h1>

<p>vi filename</p>

<h1>Insert in file</h1>

<p>i</p>

<h1>Exit file</h1>

<p>q</p>

<h1>Forced exit</h1>

<p>q!</p>

<h1>Save file</h1>

<p>wq</p>

<h1>Forced save</h1>

<p>wq!</p>

<h1>Copy no of lines</h1>

<p>yy</p>

<h1>Paste copied lines</h1>

<p>pp</p>

<h1>Undo changes</h1>

<p>uu</p>

<h1>Delete lines</h1>

<p>dd</p>

<h1>To search and replace string in vi</h1>

<p>:%s/search_string/replacement_string/g</p>

<h1>To find particular word in file</h1>

<p>?string1
```
If you have any quick list, please let me know !</p>

<p>Below post is reblogged from <a href="http://nakuls77.wordpress.com/2008/09/14/using-vi-editor/#comment-144">http://nakuls77.wordpress.com/2008/09/14/using-vi-editor/#comment-144</a></p>

<blockquote><p>Vi is a very powerful editor that has been part of nearly every linux/unix distro for a very long time. Many people stray away from Vi due to the curve involved in learning this editor. This guide will help you dive into the world of Vi. Once you do, you will understand why many prefer Vi over other editors.</p></blockquote>

<p>There are countless options for Vi that can be set up inside the /etc/vimrc file.</p>

<p>Auto-indent and creating a macro to change the color of the background.
```</p>

<h1>vi /etc/vimrc</h1>

<p>```</p>

<h2>Auto-Indent Option &ndash;</h2>

<p>This option is so when you tab-space out a line and then press enter, the cursor will move to the next line, automatically indented to the start of the previous line. This helps programmers indent out code easily to create clean looking code. To implement this feature, please add the following line to the bottom of your /etc/vimrc file:
<code>
set ai
</code>
Please note that generally speaking only programmers will want to turn ON auto-indent.</p>

<h2>Background Color &ndash;</h2>

<p>Some SSH clients have white backgrounds and some have black backgrounds. This can make it very difficult to see the screen depending on the color of the text. This macro allows you to configure F11 to change the background color &amp; color of the text. To implement this feature, please add the following lines to the bottom of your /etc/vimrc file:</p>

<p>set background=dark
map :let &amp;background = ( &amp;background == “dark”? “light” : “dark” )</p>

<p>I would highly recommend adding in the Background Color option. However if you do not wish to implement either of these features, then please proceed on in the guide.</p>

<p>Commands</p>

<h2>Cursor Movement</h2>

<p>0 (Zero) Start of Line
^ – First non-Blank Character of Line
$ – End of Line
G Go To Command (prefix with number 5G goes to line 5)</p>

<p>Insert Mode Inserting/Appending Text
Insert Start Insert Mode at Cursor
A Append at the end of the Line
o open (append) blank link below current line
I Open blank line above current line
Esc Exit Insert Mode</p>

<h2>Editing</h2>

<p>r Replace a single character (does not use insert mode)
J Join line below with the current one
cc Change (replace) an entire line
cw Change (replace) to the end of word
c$ – Change (replace) to the end of line
s Delete character at cursor and substitute text
S Delete line at cursor and substitute text (same as cc)
u Undo
. – Repeat last command</p>

<h2>Cut and Paste</h2>

<p>yy Copy(yank) a line
2yy Copy(yank) two lines
yw Copy(yank) word
p Paste the clipboard after the cursor
P Paste the clipboard before the cursor
dd Delete a line
dw Delete the current word
x Delete the current character</p>

<h2>Exiting</h2>

<p>:w Write (save) the file, but don’t exit
:wq Write &amp; Quit
:q Quit
:q! – Quit and don’t save changes</p>

<h2>Searching</h2>

<p>/pattern Search for a pattern
?pattern Search backward for a pattern
n Repeat last search in same direction
N Repeat last search in opposite direction
:%2/old/new/g Replace all old with new throughout file
:%s/old/new/gc Replace all old with new throughout file with confirmations</p>

<h2>Working with Multiple Files</h2>

<p>:e filename Edit a file in a new buffer
:bn Go to next buffer
:bp Go to previous buffer
:bd Close file(buffer)
:sp filename Open a file in a new buffer and split window
ctrl-ws Split windows
ctrl-ww Switch between windows
ctrl-wq Quite a window
ctrl-wv Split windows vertically
ctrl-wq Quite a window
ctrl-wv Split windows vertically</p>
]]></content>
  </entry>
  
</feed>
