<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rvm | Fun On Rails]]></title>
  <link href="funonrails.com/categories/rvm/atom.xml" rel="self"/>
  <link href="funonrails.com/"/>
  <updated>2014-02-14T16:35:12+05:30</updated>
  <id>funonrails.com/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Managing multiple ruby versions and rails versions with rvm]]></title>
    <link href="funonrails.com/2009/09/managing-multiple-ruby-versions-and/"/>
    <updated>2009-09-30T18:32:00+05:30</updated>
    <id>funonrails.com/2009/09/managing-multiple-ruby-versions-and</id>
    <content type="html"><![CDATA[<div class='post'>
While working with many projects that uses different ruby versions and rails versions, one big problem arises that how do we manage all this ?<br/><br/>We know that managing multiple rails versions wont be problem at all.<br/>but what about ruby versions, How one can manage multiple ruby versions. also while upgrading or degrading ruby version, we need to install all gems again including rails. <br/>i know this is a big pain :(<br/>How we can overcome this headache. meantime there must be some incompatibilities between two different ruby and rails versions.<br/><br/>Yesterday, i did some research and came to know that...<br/><br/>+ ruby 1.8.7 and rails 2.3.3 got quite stability and effectively. we can use it in next developments.<br/>+ Also, after installing ruby 1.9.1 and dependent gems for my project, <br/>and wondering that there are many incompatibilities while installing new gems with ruby 1.9.1<br/><br/>Some of the gems are mysql, ferret, acts_as_ferret, erubies, etc.<br/><br/>Today, while google, i found rvm gem and that seems very nice to manage multiple ruby versions.<br/><br/><br/>Here are some steps explaining how to use it.<br/><br/># Install rvm gem to manage multiple ruby version<br/># pre-requisite is that we already have ruby and rubygems installation<br/><pre class=ruby>1. sudo gem install rvm</pre><br/><br/># Install rvm for a particular user<br/># It will also show how to use gem<br/><pre class=ruby>2. rvm-install</pre><br/><br/>3. Open new shell<br/><br/># Show all ruby, jruby installations<br/><pre class=ruby>4. rvm list</pre><br/><br/># Install ruby<br/># specify ruby version<br/><pre class=ruby>5. rvm install RUBY_VERSION_TO_BE_INSTALLED</pre><br/>    (rvm install 1.9.1)<br/><br/># Install jruby<br/># By default it will install jruby-1.3.1<br/><pre class=ruby>6. rvm install jruby</pre><br/><br/># Specify which ruby version to use ?<br/># Note: Be sure that ruby version is installed<br/><pre class=ruby>7. rvm use RUBY_VERSION_TO_USE </pre><br/>    (rvm use 1.9.1)<br/><br/>#. Default i.e. version before rvm gem installation<br/><pre class=ruby>8. rvm use default</pre><br/><br/>Sounds, cool :)</div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>togserv</div>
<div class='content'>
This comment has been removed by a blog administrator.</div>
</div>
<div class='comment'>
<div class='author'>black hattitude</div>
<div class='content'>
hello,<br><br><br>Thank you for the great quality of your blog, each  time i come here, i&#39;m amazed.<br><br><br><br><br><br> <a href="http://blackhattitude.luc-quoniam.fr" rel="nofollow" rel="nofollow">black hattitude</a>.</div>
</div>
</div>

]]></content>
  </entry>
  
</feed>
