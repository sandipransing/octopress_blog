<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: paperclip | Fun On Rails]]></title>
  <link href="funonrails.com/categories/paperclip/atom.xml" rel="self"/>
  <link href="funonrails.com/"/>
  <updated>2014-02-18T19:37:56+05:30</updated>
  <id>funonrails.com/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[paperclip options aws-s3 config and rails]]></title>
    <link href="funonrails.com/2011/11/paperclip-options-aws-s3-config-and/"/>
    <updated>2011-11-21T23:23:00+05:30</updated>
    <id>funonrails.com/2011/11/paperclip-options-aws-s3-config-and</id>
    <content type="html"><![CDATA[<p>Stepwise guide to configure paperclip default options, setting up aws-s3 storage in rails
Inside Gemfile</p>

<p><code>
gem 'aws-s3',               :require =&gt; 'aws/s3'
gem 'paperclip'
</code></p>

<p>Bundle
<code>
bundle install
</code>
Generate Print model to hold image
<code>
rails g model print image_file_name:string image_content_type:string image_file_size:string
</code></p>

<p>DB Migration
<code>
rake db:migrate
</code></p>

<p>Add s3 credentials to YML file
```</p>

<h1>config/s3.yml</h1>

<p>access_key_id: DASDFG7KACNxIJdJXHPQ
secret_access_key: BnDrTnzCTX+R707wYEP/aCEqAsDFG7sgW
```</p>

<p>Add default paperclip attachment options to initializer
```ruby</p>

<h1>Make sure to add host url inside config/environments</h1>

<h1>HOSTNAME = &lsquo;<a href="http://lordganesha.com">http://lordganesha.com</a>&rsquo;</h1>

<p>Paperclip::Attachment.default_options.merge!(
  :storage => &lsquo;s3&rsquo;,
  :s3_credentials => YAML.load_file(&ldquo;#{Rails.root}/config/s3.yml&rdquo;),
  :path => &ldquo;:class/:attachment/#{Rails.env}/:id/:style/:basename.:extension&rdquo;,</p>

<pre><code>:default_url =&gt; "http://#{HOSTNAME}/images/paperclip/:class/:attachment/default.jpg",
</code></pre>

<p>  :bucket => &lsquo;ganesha&rsquo;
)
```</p>

<p>Add image attachment code to print model
```ruby</p>

<h1>app/models/print.rb</h1>

<p>class Print &lt; ActiveRecord::Base
  has_attached_file :image,</p>

<pre><code>:styles =&gt; {:medium =&gt; ["400x400#", :jpg], 
            :thumb =&gt; ["100x100#", :jpg], 
            :slider =&gt; ["300x300#", :jpg]}
</code></pre>

<p>  #validates_attachment_presence :image
  validates_attachment_size :image, :less_than => 1.megabytes, :message => &lsquo;file size maximum 1 MB allowed&rsquo;
  validates_attachment_content_type :image, :content_type => [&lsquo;image/jpeg&rsquo;, &lsquo;image/png&rsquo;, &lsquo;image/gif&rsquo;, &lsquo;image/bmp&rsquo;, &lsquo;image/pjpeg&rsquo;, &lsquo;image/x-png&rsquo;]
end
```</p>

<p>Inside views
```haml</p>

<h1>inside new.html.haml</h1>

<p>= form_for @print do
  =f.file_field :image
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paperclip image upload via URL]]></title>
    <link href="funonrails.com/2011/11/paperclip-image-upload-via-url/"/>
    <updated>2011-11-21T17:56:00+05:30</updated>
    <id>funonrails.com/2011/11/paperclip-image-upload-via-url</id>
    <content type="html"><![CDATA[<p>Upload image via paperclip via passing URL instead of file upload</p>

<p>```ruby</p>

<h1>Consider Print instance with image as file attachment</h1>

<p>class Print &lt; ActiveRecord::Base
  has_attached_file :image
  def upload_image(url)</p>

<pre><code>begin
  io = open(URI.escape(url))
  if io
    def io.original_filename; base_uri.path.split('/').last; end
    io.original_filename.blank? ? nil : io
    p.image = io
  end
  p.save(false)
rescue Exception =&gt; e
  logger.info "EXCEPTION# #{e.message}"
end
</code></pre>

<p>  end
end
```</p>

<p>Text code from console
<code>
p = Print.new
url = "http://ocdevel.com/sites/ocdevel.com/files/images/rails.png"
p.upload_image(url)
</code></p>
]]></content>
  </entry>
  
</feed>
