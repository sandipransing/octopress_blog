<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: api | Fun On Rails]]></title>
  <link href="http://funonrails.com/categories/api/atom.xml" rel="self"/>
  <link href="http://funonrails.com/"/>
  <updated>2014-02-28T14:25:37+05:30</updated>
  <id>http://funonrails.com/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Zipcode validation using geokit in rails]]></title>
    <link href="http://funonrails.com/2010/08/zipcode-validation-using-geokit-in-rails/"/>
    <updated>2010-08-21T04:58:00+05:30</updated>
    <id>http://funonrails.com/2010/08/zipcode-validation-using-geokit-in-rails</id>
    <content type="html"><![CDATA[<ol>
<li><strong>Install geokit gem</strong>
<code>
gem install geokit
</code>
OR<br/>
```ruby

<h1>Add following line inside rails initialize block</h1>

<p>Rails::Initializer.run do |config|
config.gem &lsquo;geokit&rsquo;
end
<code>
And then run command
</code>
rake gems:install
```</p></li>
<li><strong>Consider User model with zipcode as attribute field</strong>
```ruby
include Geokit::Geocoders
class User &lt; ActiveRecord::Base
set_table_name :users
validate_presence_of :zipcode
validate :request_zipcode_validation_using_geokit, :if => :zipcode</li>
</ol>


<p>  private
  def request_zipcode_validation_using_geokit</p>

<pre><code># Method request google api for location
# if location found then zipcode is valid otherwise
# add validation error on zipcode field
# as it method contacts with google api and takes time
# to return result, poll request only when zipcode gets
# changed
poll = true # default true for new objects
if self.id ## this means already existing user and zipcode is valid last time
  # Hack to find where zipcode got modified or not 
  # old_user = User.find self.id
  poll = false if old_user.zipcode == self.zipcode
end

# Actual requesting api to return location associated with zipcode
if poll
  loc = MultiGeocoder.geocode(self.zip_code)
end
# Add Validation Error if location is not found
errors.add(:zip_code, "Unable to geocode your location from zipcode entered.") unless loc.success
</code></pre>

<p>  end
end
```
<strong>Please note that same method can also be used to validate state, city and country.
Again we can use combination of fields to validate each other.
Like &ndash;</strong></p>

<ol>
<li><strong>Based on country entered, state validation</strong></li>
<li><strong>Based on state, city validation</strong></li>
<li><strong>Based on city, zipcode validation</strong>
or</li>
<li><strong>Based on zipcode and country, state and city validation</strong></li>
</ol>


<p>Here is another method to validate state and city based on zipcode and country.
Lets take example of &lsquo;US&rsquo;
```ruby
def request_state_and_city_validation_based_on_zipcode
  poll = true # default true for new objects
  if self.id ## this means already existing user and all attributes were valid last time</p>

<pre><code># Hack to find any one of location attribute got modified
# old_user = User.find self.id
loc_attrs = %w{zipcode state city} # keep in mind country US is default assumed
if loc_attrs.all? {|attr| self.attribute_for_inspect(attr) == old_user.attribute_for_inspect(attr)}
  self.poll = false
end
</code></pre>

<p>  end</p>

<p>  # Actual requesting api to return location associated with zipcode
  if poll</p>

<pre><code>loc = MultiGeocoder.geocode("#{self.zip_code}, US")
</code></pre>

<p>  end
  # Add Validation Error if location is not found
  unless loc.success</p>

<pre><code>errors.add(:zip_code, "Unable to geocode your location from zipcode entered.")
</code></pre>

<p>  else</p>

<pre><code># Validate state and city fields in compare to loc object returned by geocode
errors.add(:state, "State doesn't matches with zipcode entered") if self.state != loc.state
errors.add(:city, "City doesn't matches with zipcode entered") if self.city != loc.city
</code></pre>

<p>  end
end
```
<strong>Note</strong> **
If you are subscriber of blog and not displaying post correctly. I request you to visit post on blog itself. Somehow style is not getting correctly in email. I will try to fix this problem asap.</p>

<p><strong>Upcoming Posts</strong></p>

<ol>
<li>Geokit finders: Find locations in/within/beyond particular radius from specified location using acts_as_mappable plugin</li>
<li>Customizing authlogic for multiple sessions i.e. using different models for role based authentication.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hpricot scraping in ruby]]></title>
    <link href="http://funonrails.com/2009/12/hpricot-scraping-in-ruby/"/>
    <updated>2009-12-02T18:24:00+05:30</updated>
    <id>http://funonrails.com/2009/12/hpricot-scraping-in-ruby</id>
    <content type="html"><![CDATA[<p>Include gems/library required before getting started
```ruby
require &lsquo;hpricot&rsquo;
require &lsquo;net/http&rsquo;
require &lsquo;rio&rsquo;</p>

<h1>Pass website url to be scraped</h1>

<p>url = &ldquo;www.funonrails.com&rdquo;</p>

<h1>Define filename to store file locally</h1>

<p>file = &ldquo;temp.html&rdquo;</p>

<h1>Save page locally</h1>

<p>rio(url) &lt; rio (file)</p>

<h1>Open page through hpricot</h1>

<p>doc = Hpricot(open(file))
<code>
Apply hpricot library to get right contents
</code>ruby
doc.at(&ldquo;div.pageTitle&rdquo;)
doc/&ldquo;div.pageTitle&rdquo;
doc.search(&ldquo;div.entry&rdquo;)
doc//&ldquo;div.pageTitle&rdquo;
```
Hpricot API Reference click <a href="http://rdoc.info/github/hpricot/hpricot/Hpricot/Doc">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10 steps to get start with MySpace Ruby SDK]]></title>
    <link href="http://funonrails.com/2009/10/10-steps-to-get-start-with-myspace-ruby/"/>
    <updated>2009-10-27T21:33:00+05:30</updated>
    <id>http://funonrails.com/2009/10/10-steps-to-get-start-with-myspace-ruby</id>
    <content type="html"><![CDATA[<p>Follow 10 simple steps listed below in order to use myspace sdk api</p>

<h4>1. Remove existing <code>myspace</code> gems installed if any</h4>

<p><code>
gem uninstall myspace
</code></p>

<h4>2. Checkout sample source code</h4>

<p><code>
svn checkout http://myspaceid-ruby-sdk.googlecode.com/svn/trunk/ myspacesdk
</code></p>

<h4>3. Move to sample dir</h4>

<p><code>
cd myspacesdk/samples/rails/sample
</code></p>

<h4>4. Modify DB config</h4>

<p>```yml</p>

<h1>Modify config/database.yml accordingly</h1>

<p>development:
  adapter: mysql
  database: sample_development
  password: abcd
  pool: 5
  timeout: 5000
```</p>

<h4>5. Download Gem</h4>

<p><code>
wget http://myspaceid-ruby-sdk.googlecode.com/files/myspaceid-sdk-0.1.11.gem
</code></p>

<h4>6. Install <code>myspaceid-sdk</code> gem locally</h4>

<p>```
gem install &mdash;local ~/Desktop/myspaceid-sdk-0.1.11.gem</p>

<h1>&mdash;local option taskes local PATH_TO_GEM</h1>

<p>```</p>

<h4>7. Above command supposed to give following error otherwise skip to step 10</h4>

<p><code>
ERROR:  Error installing /home/sandip/Desktop/myspaceid-sdk-0.1.11.gem:
myspaceid-sdk requires ruby-openid (&gt;= 0, runtime)
</code></p>

<h4>8. Install <code>ruby-openid</code> and go to &ldquo;step 6&rdquo;</h4>

<p>```
gem install ruby-openid</p>

<h1>Go to step 6</h1>

<p>```</p>

<h4>9. Start Server</h4>

<p><code>
ruby script/server
</code></p>

<h4>10.  Browse Application</h4>

<p>Open URL <a href="http://localhost:3000/">http://localhost:3000/</a></p>
]]></content>
  </entry>
  
</feed>
