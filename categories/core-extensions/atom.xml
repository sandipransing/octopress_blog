<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: core-extensions | Fun On Rails]]></title>
  <link href="funonrails.com/categories/core-extensions/atom.xml" rel="self"/>
  <link href="funonrails.com/"/>
  <updated>2014-02-21T02:23:40+05:30</updated>
  <id>funonrails.com/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Overriding to_s method for BigDecimal instance]]></title>
    <link href="funonrails.com/2010/10/overriding-tos-method-for-bigdecimal/"/>
    <updated>2010-10-22T19:31:00+05:30</updated>
    <id>funonrails.com/2010/10/overriding-tos-method-for-bigdecimal</id>
    <content type="html"><![CDATA[<h2>Requirement</h2>

<p>It was requirement to display decimal numbers which are having scale values present to be displayed in decimal format otherwise display them as integer.</p>

<h2>Expectated Output</h2>

<p><code>
12.23 =&gt; 12.23
12.00 =&gt; 12
</code>
While rendering any object on html page by default <em>to_s</em> method gets executed. So, i overwrote <em>to_s</em> method of BigDecimal class as below.</p>

<p>Anyone having better solution. Please reply with your solutions. Many thanks in advance!
Put below code in file <em>config/intializers/core_extensions.rb</em></p>

<p>```ruby
class BigDecimal</p>

<pre><code>alias :old_s :to_s
def to_s
  return to_i.to_s if eql? to_i
  self.old_s
end
</code></pre>

<p>  end
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Extend enumerable to add method collect_with_index]]></title>
    <link href="funonrails.com/2010/02/extend-enumerable-to-add-method/"/>
    <updated>2010-02-18T14:24:00+05:30</updated>
    <id>funonrails.com/2010/02/extend-enumerable-to-add-method</id>
    <content type="html"><![CDATA[<p>Extend enumerable functionality to iterate along with index</p>

<p>```ruby
module Enumerable
  def collect_with_index(i=0)</p>

<pre><code>collect{|elm| yield(elm, i+=1)}
</code></pre>

<p>  end
  alias map_with_index collect_with_index
end
```</p>

<h4>Example use :</h4>

<p>```
 [&lsquo;ruby&rsquo;, &lsquo;rails&rsquo;, &lsquo;sandip&rsquo;].map_with_index{ |w,i|  [w, i] }
 #=> [[&ldquo;ruby&rdquo;, 1], [&ldquo;rails&rdquo;, 2], [&ldquo;sandip&rdquo;, 3]]</p>

<p> [&lsquo;ruby&rsquo;, &lsquo;rails&rsquo;, &lsquo;sandip&rsquo;].collect_with_index{ |w,i|  [w,  i] }
 #=> [[&ldquo;ruby&rdquo;, 1], [&ldquo;rails&rdquo;, 2], [&ldquo;sandip&rdquo;, 3]]</p>

<p> #By default index starts from zero to specify custom index to start from,
 #pass index to collect_with_index</p>

<p> [&lsquo;ruby&rsquo;, &lsquo;rails&rsquo;, &lsquo;sandip&rsquo;].map_with_index(-1){ |w,i|  [w, i] }
 #=> [[&ldquo;ruby&rdquo;, 0], [&ldquo;rails&rdquo;, 1], [&ldquo;sandip&rdquo;, 2]]</p>

<p> [&lsquo;ruby&rsquo;, &lsquo;rails&rsquo;, &lsquo;sandip&rsquo;].map_with_index(5){ |w,i|  [w, i] }
 #=> [[&ldquo;ruby&rdquo;, 6], [&ldquo;rails&rdquo;, 7], [&ldquo;sandip&rdquo;, 8]]
```</p>
]]></content>
  </entry>
  
</feed>
