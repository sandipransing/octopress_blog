<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Fun On Rails]]></title>
  <link href="http://funonrails.com/categories/linux/atom.xml" rel="self"/>
  <link href="http://funonrails.com/"/>
  <updated>2014-02-28T18:46:18+05:30</updated>
  <id>http://funonrails.com/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Auto login remote server by copying ssh public key to authorized keys]]></title>
    <link href="http://funonrails.com/2011/02/auto-login-remote-server-by-copying-ssh/"/>
    <updated>2011-02-03T16:21:00+05:30</updated>
    <id>http://funonrails.com/2011/02/auto-login-remote-server-by-copying-ssh</id>
    <content type="html"><![CDATA[<p>While working on remote machine we often get headache of entering password for ssh login, scp files from one server to another server. Adding public key as authorized_keys on remote server solves this problem.</p>

<h2>Copying from my system to remote server</h2>

<p><code>
cat ~/.ssh/id_rsa.pub | ssh sandip@server 'cat &gt;&gt; ~/.ssh/authorized_keys'
</code></p>

<h2>Copying from remote server to my system</h2>

<p><code>
ssh server 'cat ~/.ssh/id_rsa.pub' | cat &gt;&gt; ~/.ssh/id_rsa_client.pub
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing and running cronjob (crontab basics)]]></title>
    <link href="http://funonrails.com/2011/01/installing-and-running-cronjob-crontab/"/>
    <updated>2011-01-20T13:50:00+05:30</updated>
    <id>http://funonrails.com/2011/01/installing-and-running-cronjob-crontab</id>
    <content type="html"><![CDATA[<p>Basic handy commands while working with crontabs</p>

<h2>Editing cron file</h2>

<p><code>
crontab -e
</code></p>

<h2>Displaying cron file</h2>

<p><code>
crontab -l
</code></p>

<h2>Removing cron file</h2>

<p><code>
crontab -r
</code></p>

<h2>Cron syntax</h2>

<blockquote><p>cron command basically takes 6 input parameters of which each input can take multiple arguments for that one can make use of comma or pipe separator</p></blockquote>

<p>```</p>

<h1>min hour dom mon dow   command</h1>

<ul>
<li><ul>
<li><ul>
<li><ul>
<li><ul>
<li>(command)
```</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>Here * means for every. Above command will get executed for every minute</p>

<h2>Detail syntax</h2>

<p>```
*     *     *   *    *        command to be executed</p>

<hr />

<p>|     |     |   |    |
|     |     |   |    +&mdash;&mdash;&ndash; day of week (0 &ndash; 6) (Sunday=0)
|     |     |   +&mdash;&mdash;&mdash;&ndash; month (1 &ndash; 12)
|     |     +&mdash;&mdash;&mdash;&mdash;&ndash; day of month (1 &ndash; 31)
|     +&mdash;&mdash;&mdash;&mdash;&mdash; hour (0 &ndash; 23)
+&mdash;&mdash;&mdash;&ndash; min (0 &ndash; 59)
```</p>

<h2>Example commands</h2>

<p>```</p>

<h1>Generate progressive report for every active user at 11:45 p.m.</h1>

<p>45 23 * * * (cd /home/sandip/current/; rake ace:daily_progressive_report RAILS_ENV=production)</p>

<h1>Take database backup every night</h1>

<p>59 2 * * * (cd /home/sandip/current/; rake db:backup RAILS_ENV=production)</p>

<h1>Initialize grouping on database every sunday</h1>

<p>29 3 * * 0 (cd /home/sandip/current/; rake ace:initializeCarGrouping RAILS_ENV=production)</p>

<h1>Generate daily stats on 4:30 AM &amp; 12:30 PM and 4:30 PM</h1>

<p>30 4,12,16 * * * (cd /home/sandip/current/; rake ace:daily_call_statistics RAILS_ENV=production)</p>

<h1>Rotate sphinx indexes updated evry hour if missed out somehow</h1>

<p>0 * * * * (cd /user/local/bin/; indexer &mdash;rotate &mdash;config /home/sandip/current/config/production.sphinx.conf)
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming ruby Linux basics]]></title>
    <link href="http://funonrails.com/2010/03/remove-svn-files-inside-directory-rm-rf/"/>
    <updated>2010-03-02T12:29:00+05:30</updated>
    <id>http://funonrails.com/2010/03/remove-svn-files-inside-directory-rm-rf</id>
    <content type="html"><![CDATA[<h2>Remove svn files inside directory</h2>

<p><code>
rm -rf `find . -type d -name .svn
</code></p>

<h2>Set path in linux</h2>

<p><code>
export PATH=$PATH:/usr/ruby/bin
</code></p>

<p>Here /usr/ruby/bin is the path to ruby extecuatble.
<code>
grep and print process pid
ps -ef | grep search_string | grep -v grep | awk '{print  $2 }'
</code></p>

<h2>Kill process</h2>

<p><code>
kill -9 process_id_here
ps -ef | grep search_string | grep -v grep | awk '{print  $2 }' | xargs kill -9
</code></p>

<h2>Store pid of process in a variable for further process</h2>

<p><code>
tokill=`ps -ef|grep ruby|grep -v grep|awk '{print $2}'`;kill -9 $tokill;
</code></p>

<h2>Mirror a website</h2>

<p>Command to clone/copy a website for offline/local browsing.
<code>
wget -mk www.funonrails.com
</code>
Above command downloads all website pages in depth level with stylesheets, images and javascripts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find processor (cpu) information on linux]]></title>
    <link href="http://funonrails.com/2009/10/find-processor-cpu-information-on-linux/"/>
    <updated>2009-10-26T23:49:00+05:30</updated>
    <id>http://funonrails.com/2009/10/find-processor-cpu-information-on-linux</id>
    <content type="html"><![CDATA[<p>Below command will give you all the details about CPU
<code>
cat /proc/cpuinfo
</code></p>

<h4>Example use</h4>

<p>on my ubuntu machine, It showed me below information :
```
processor : 0
vendor_id : GenuineIntel
cpu family  : 6
model   : 42
model name  : Intel&reg; Core&trade; i3-2350M CPU @ 2.30GHz
stepping  : 7
microcode : 0x1b
cpu MHz   : 800.000
cache size  : 3072 KB
physical id : 0
siblings  : 4
core id   : 0
cpu cores : 2
apicid    : 0
initial apicid  : 0
fpu   : yes
fpu_exception : yes
cpuid level : 13
wp    : yes
flags   : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer xsave avx lahf_lm arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid
bogomips  : 4589.39
clflush size  : 64
cache_alignment : 64
address sizes : 36 bits physical, 48 bits virtual
power management:</p>

<p>processor : 1
vendor_id : GenuineIntel
cpu family  : 6
model   : 42
model name  : Intel&reg; Core&trade; i3-2350M CPU @ 2.30GHz
stepping  : 7
microcode : 0x1b
cpu MHz   : 800.000
cache size  : 3072 KB
physical id : 0
siblings  : 4
core id   : 1
cpu cores : 2
apicid    : 2
initial apicid  : 2
fpu   : yes
fpu_exception : yes
cpuid level : 13
wp    : yes
flags   : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer xsave avx lahf_lm arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid
bogomips  : 4589.39
clflush size  : 64
cache_alignment : 64
address sizes : 36 bits physical, 48 bits virtual
power management:</p>

<p>processor : 2
vendor_id : GenuineIntel
cpu family  : 6
model   : 42
model name  : Intel&reg; Core&trade; i3-2350M CPU @ 2.30GHz
stepping  : 7
microcode : 0x1b
cpu MHz   : 800.000
cache size  : 3072 KB
physical id : 0
siblings  : 4
core id   : 0
cpu cores : 2
apicid    : 1
initial apicid  : 1
fpu   : yes
fpu_exception : yes
cpuid level : 13
wp    : yes
flags   : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer xsave avx lahf_lm arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid
bogomips  : 4589.39
clflush size  : 64
cache_alignment : 64
address sizes : 36 bits physical, 48 bits virtual
power management:</p>

<p>processor : 3
vendor_id : GenuineIntel
cpu family  : 6
model   : 42
model name  : Intel&reg; Core&trade; i3-2350M CPU @ 2.30GHz
stepping  : 7
microcode : 0x1b
cpu MHz   : 800.000
cache size  : 3072 KB
physical id : 0
siblings  : 4
core id   : 1
cpu cores : 2
apicid    : 3
initial apicid  : 3
fpu   : yes
fpu_exception : yes
cpuid level : 13
wp    : yes
flags   : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer xsave avx lahf_lm arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid
bogomips  : 4589.39
clflush size  : 64
cache_alignment : 64
address sizes : 36 bits physical, 48 bits virtual
power management:
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to find OS X version on linux machine]]></title>
    <link href="http://funonrails.com/2009/10/how-to-find-os-x-version-on-linux/"/>
    <updated>2009-10-26T23:35:00+05:30</updated>
    <id>http://funonrails.com/2009/10/how-to-find-os-x-version-on-linux</id>
    <content type="html"><![CDATA[<h2>Command</h2>

<p>Here is the command which will give you OS name with version along with other detail information.
<code>
cat /etc/*release*
</code></p>

<h2>Example</h2>

<p>On my ubutnu machine, It showed me :
```
cat /etc/<em>release</em></p>

<p>DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=8.10
DISTRIB_CODENAME=intrepid
DISTRIB_DESCRIPTION=&ldquo;Ubuntu 8.10&rdquo;
```</p>
]]></content>
  </entry>
  
</feed>
