<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: nginx | Fun On Rails]]></title>
  <link href="funonrails.com/categories/nginx/atom.xml" rel="self"/>
  <link href="funonrails.com/"/>
  <updated>2014-02-14T17:13:10+05:30</updated>
  <id>funonrails.com/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rails 3.1.1 haml sass jquery coffee-rails devise twitter-bootstrap railroady heroku]]></title>
    <link href="funonrails.com/2011/11/rails-311-haml-sass-jquery-coffee-rails/"/>
    <updated>2011-11-22T00:07:00+05:30</updated>
    <id>funonrails.com/2011/11/rails-311-haml-sass-jquery-coffee-rails</id>
    <content type="html"><![CDATA[<p>Install RVM first</p>

<p><code>
bash &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvminstaller)
</code></p>

<p>rvm list known
```</p>

<h1>MRI Rubies</h1>

<p>[ruby-]1.8.6-head
[ruby-]1.8.7[-p352]
[ruby-]1.9.3-head
ruby-head</p>

<h1>JRuby</h1>

<p>jruby-1.2.0
jruby-head</p>

<h1>Rubinius</h1>

<p>rbx-1.0.1
rbx-2.0.0pre</p>

<h1>Ruby Enterprise Edition</h1>

<p>ree-1.8.6
ree-1.8.7-head
```</p>

<p>Install ruby 1.9.3
```
rvm install 1.9.3-head
rvm gemset create rails311
rvm use 1.9.3-head@rails311 &mdash;default</p>

<p>gem install rails -v3.1.1 &mdash;no-rdoc &mdash;no-ri</p>

<p>gem install heroku
gem install rb-readline
```</p>

<p>Create new rails project
<code>
rails new cdc -m http://railswizard.org/b22092a4358bbebb3a46.rb -J -T
</code></p>

<p>Above command will create rails app, bundle install, and Heroku Deployment
<code>
http://railsblank.heroku.com/ (production)
</code></p>

<p>Local System nginx-passenger setup
<code>
gem install passenger
rvmsudo passenger-install-nginx-module
</code>
If you find pcre download error then make sure you libpcre-dev pkg installed on your system otherwise install it and re-run
<code>
sudo apt-get install libpcre3-dev
</code></p>

<p>Nginx Configuration
```
http {
  passenger_root /home/sandip/.rvm/gems/ruby-1.9.3-head@rails311/gems/passenger-3.0.9;
  passenger_ruby /home/sandip/.rvm/wrappers/ruby-1.9.3-head@rails311/ruby;</p>

<p>  server {</p>

<pre><code>listen 80;
server_name railsblank.local;
root /home/sandip/railsblank/public;
rails_env development;
passenger_enabled on;
</code></pre>

<p>}
```</p>

<p>git source code can be found here
<code>
git clone git://github.com/sandipransing/rails_blank.git
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up nginx maximum upload size]]></title>
    <link href="funonrails.com/2011/03/setting-up-nginx-maximum-upload-size/"/>
    <updated>2011-03-31T15:56:00+05:30</updated>
    <id>funonrails.com/2011/03/setting-up-nginx-maximum-upload-size</id>
    <content type="html"><![CDATA[<p>Edit nginx configuration and look for <code>http</code> block inside it.</p>

<p>Then inside <code>htttp</code> block add following lines.</p>

<p>```
http {</p>

<pre><code>include conf/mime.types;
default_type application/octet-stream;
client_max_body_size 10m;
....
</code></pre>

<p>}
```</p>

<p>In above configuration <em>application/octet-stream</em> supports any kind of file upload.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx and thin installation and configuration]]></title>
    <link href="funonrails.com/2010/03/nginx-and-thin-installation-and/"/>
    <updated>2010-03-26T02:59:00+05:30</updated>
    <id>funonrails.com/2010/03/nginx-and-thin-installation-and</id>
    <content type="html"><![CDATA[<div class='post'>
<h3> Install nginx server using following command</h3><pre class=ruby>apt-get install nginx </pre>Edit nginx configuration and add server block inside html block.&amp;nbsp;<br /><pre class=ruby>server {<br />&nbsp;&nbsp; &nbsp;listen &nbsp; &nbsp; &nbsp; 80;<br />&nbsp;&nbsp; &nbsp;server_name &nbsp;boost;<br /><br />&nbsp;&nbsp; &nbsp;root /home/sandip/rails_app/public;<br /><br />&nbsp;&nbsp; &nbsp;location / {<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;proxy_set_header &nbsp;X-Real-IP &nbsp;$remote_addr;<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;proxy_set_header &nbsp;X-Forwarded-For $proxy_add_x_forwarded_for;<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;proxy_set_header Host $http_host;<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;proxy_redirect off;<br /><br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;if (-f $request_filename/index.html) {<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rewrite (.*) $1/index.html break;<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;if (-f $request_filename.html) {<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rewrite (.*) $1.html break;<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;if (!-f $request_filename) {<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;proxy_pass http://thin;<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;break;<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}<br />&nbsp;&nbsp; &nbsp;}<br /><br />&nbsp;&nbsp; &nbsp;error_page &nbsp; 500 502 503 504 &nbsp;/50x.html;<br />&nbsp;&nbsp; &nbsp;location = /50x.html {<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;root &nbsp; html;<br />&nbsp;&nbsp; &nbsp;}<br />}<br /></pre><br />Install thin server as gem<br /><pre class=ruby>sudo gem install thin<br /><br />Building native extensions. &nbsp;This could take a while...<br />Building native extensions. &nbsp;This could take a while...<br />Successfully installed eventmachine-0.12.10<br />Successfully installed thin-1.2.7<br />2 gems installed<br /></pre><br />Install thin service<br /><pre class=ruby>sudo thin install<br />Installing thin service at /etc/init.d/thin ...<br />mkdir -p /etc/init.d<br />writing /etc/init.d/thin<br />chmod +x /etc/init.d/thin<br />mkdir -p /etc/thin<br /></pre><br />Configure thin to start at system boot<br /><pre class=ruby>sudo /usr/sbin/update-rc.d -f thin defaults<br /></pre><br />Then put your config files in /etc/thin<br /><pre class=ruby>sudo /usr/sbin/update-rc.d -f thin defaults<br />update-rc.d: warning: thin stop runlevel arguments (0 1 6) do not match LSB Default-Stop values (S 0 1 6)<br />&nbsp;Adding system startup for /etc/init.d/thin ...<br />&nbsp;&nbsp; /etc/rc0.d/K20thin -&amp;gt; ../init.d/thin<br />&nbsp;&nbsp; /etc/rc1.d/K20thin -&amp;gt; ../init.d/thin<br />&nbsp;&nbsp; /etc/rc6.d/K20thin -&amp;gt; ../init.d/thin<br />&nbsp;&nbsp; /etc/rc2.d/S20thin -&amp;gt; ../init.d/thin<br />&nbsp;&nbsp; /etc/rc3.d/S20thin -&amp;gt; ../init.d/thin<br />&nbsp;&nbsp; /etc/rc4.d/S20thin -&amp;gt; ../init.d/thin<br />&nbsp;&nbsp; /etc/rc5.d/S20thin -&amp;gt; ../init.d/thin<br /></pre><br />Create thin configuration<br /><pre class=ruby>sudo thin config -C /etc/thin/&lt;config-name&gt;.yml -c &lt;rails-app-root-path&gt; --servers &lt;number-of-threads&gt; -e &lt;environment&gt;<br />&lt;/environment&gt;&lt;/number-of-threads&gt;&lt;/rails-app-root-path&gt;&lt;/config-name&gt; </pre><br />In my case,<br /><pre class=ruby>sudo thin config -C /etc/thin/rails_app.yml -c /home/sandip/rails_app --servers 3 -e production<br />&amp;gt;&amp;gt; Wrote configuration to /etc/thin/rails_app.yml<br /></pre><br />thin configuration file will look like<br /><br />Start/stop/restart Nginx &amp;amp; thin server using command<br /><br /><pre class=ruby>sudo service nginx start|stop|restart<br />sudo service thin start|stop|restart<br /></pre></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx passenger configuration for rails application]]></title>
    <link href="funonrails.com/2010/02/nginx-passenger-configuration-for-rails/"/>
    <updated>2010-02-15T21:43:00+05:30</updated>
    <id>funonrails.com/2010/02/nginx-passenger-configuration-for-rails</id>
    <content type="html"><![CDATA[<div class='post'>
<br />#user &nbsp;nobody;<br />user www-data;<br />worker_processes &nbsp;2;<br /><br />#error_log &nbsp;logs/error.log;<br />#error_log &nbsp;logs/error.log &nbsp;notice;<br />#error_log &nbsp;logs/error.log &nbsp;info;<br /><br />#pid &nbsp; &nbsp; &nbsp; &nbsp;logs/nginx.pid;<br /><br />events {<br />&nbsp;&nbsp; &nbsp;worker_connections &nbsp;1024;<br />}<br /><br />http {<br />&nbsp;&nbsp; &nbsp;passenger_root /var/lib/gems/1.8/gems/passenger-2.2.8;<br />&nbsp;&nbsp; &nbsp;passenger_ruby /usr/bin/ruby1.8;<br />&nbsp;&nbsp; &nbsp;passenger_max_pool_size 3;<br /><br />&nbsp;&nbsp; &nbsp;include &nbsp; &nbsp; &nbsp; mime.types;<br /><div><div>default_type &nbsp;application/octet-stream;</div><div><br /></div><div>&nbsp;&nbsp; &nbsp;#log_format &nbsp;main &nbsp;'$remote_addr - $remote_user [$time_local] "$request" '</div><div>&nbsp;&nbsp; &nbsp;# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'$status $body_bytes_sent "$http_referer" '</div><div>&nbsp;&nbsp; &nbsp;# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;'"$http_user_agent" "$http_x_forwarded_for"';</div><div><br /></div><div>&nbsp;&nbsp; &nbsp;#access_log &nbsp;logs/access.log &nbsp;main;</div><div><br /></div><div>&nbsp;&nbsp; &nbsp;sendfile &nbsp; &nbsp; &nbsp; &nbsp;on;</div><div>&nbsp;&nbsp; &nbsp;#tcp_nopush &nbsp; &nbsp; on;</div><div><br /></div><div>&nbsp;&nbsp; &nbsp;#keepalive_timeout &nbsp;0;</div><div>&nbsp;&nbsp; &nbsp;keepalive_timeout &nbsp;65;</div><div><br /></div><div>&nbsp;&nbsp; &nbsp;#gzip &nbsp;on;</div><div><div>&nbsp;server {</div><div>&nbsp;&nbsp; &nbsp; listen 80;</div><div>&nbsp;&nbsp; &nbsp; server_name localhost;</div><div>&nbsp;&nbsp; &nbsp; root /home/josh/current/public; &nbsp; # &lt;--- be sure to point to 'public'!</div><div>&nbsp;&nbsp; &nbsp; passenger_enabled on;</div><div>&nbsp;&nbsp; &nbsp; passenger_use_global_queue on;</div><div>&nbsp;&nbsp; }</div><div><br /></div><div>&nbsp;&nbsp; &nbsp;server {</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;listen &nbsp; &nbsp; &nbsp; 80;</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;server_name &nbsp;localhost;</div><div><br /></div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;#charset koi8-r;</div><div><br /></div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;#access_log &nbsp;logs/host.access.log &nbsp;main;</div><div><br /></div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;location / {</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;root &nbsp; html;</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;index &nbsp;index.html index.htm;</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}</div><div><div>&nbsp;&nbsp; &nbsp; #error_page &nbsp;404 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/404.html;</div><div><br /></div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;# redirect server error pages to the static page /50x.html</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;#</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;error_page &nbsp; 500 502 503 504 &nbsp;/50x.html;</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;location = /50x.html {</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;root &nbsp; html;</div><div>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;}</div><div><div>&nbsp;&nbsp; }</div><div>}</div></div></div></div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[4 steps to install nginx with passenger]]></title>
    <link href="funonrails.com/2009/09/4-steps-to-install-nginx-with-passenger/"/>
    <updated>2009-09-09T23:47:00+05:30</updated>
    <id>funonrails.com/2009/09/4-steps-to-install-nginx-with-passenger</id>
    <content type="html"><![CDATA[<div class='post'>
Install passenger program that will run your rails application<br/><strong>1. sudo gem install passenger</strong><br/>Install nginx server with passenger enabled<br/><strong>2. passenger-install-nginx-module</strong><br/><br/>it will open apt, click "Enter" to contine<br/>then select option 1 for default install<br/>then it will ask<br/>Where do you want to install Nginx to?<br/><br/>Please specify a prefix directory [/opt/nginx]:<br/>press enter<br/><br/>then copy following block<br/><br/><strong> server {<br/>listen 80;<br/>server_name <a href="http://www.yourhost.com/" target="_blank">www.yourhost.com</a>;<br/>root /somewhere/public;   # &lt;--- be sure to point to 'public'!<br/>passenger_enabled on;<br/>}</strong><br/><br/>Make nginx Configuration<br/>3. vi /opt/nginx/conf/nginx.conf<br/>Make passenger_root and passenger_ruby path to configuration<br/><strong><br/><br/>http {<br/>passenger_root /usr/local/lib/ruby/gems/1.8/gems/passenger-2.2.4;<br/>passenger_ruby /usr/local/bin/ruby;<br/></strong><br/><br/>then add server configuration block inside http block<br/>http{<br/>...<br/><strong> server {<br/>listen 80;<br/>server_name <a href="http://www.yourhost.com/" target="_blank">www.yourhost.com</a>; //Make sure this dns entry inside /etc/hosts<br/>root /carsonline/public;   # &lt;--- be sure to point to 'public'! //here carsonline is RAILS_ROOT<br/>passenger_enabled on;<br/>}</strong><br/><br/>Thats, all<br/><br/>4. Launch Server<br/><br/>/opt/nginx/sbin/nginx</div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>sandip Ransing</div>
<div class='content'>
You are right..but sometimes we have to manually configure it when there are multiple ruby installations.</div>
</div>
<div class='comment'>
<div class='author'>gautamrege</div>
<div class='content'>
I think passenger_root and passenger_ruby get automatically configured during installation.<br><br>Good article.</div>
</div>
</div>

]]></content>
  </entry>
  
</feed>
