<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: activemerchant | Fun On Rails]]></title>
  <link href="http://sandipransing.github.io/blog/categories/activemerchant/atom.xml" rel="self"/>
  <link href="http://sandipransing.github.io/"/>
  <updated>2014-02-09T23:18:57+05:30</updated>
  <id>http://sandipransing.github.io/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Authorize Net (AIM) payment integration with rails]]></title>
    <link href="http://sandipransing.github.io/2011/12/authorizenet-aim-payment-integration/"/>
    <updated>2011-12-28T17:15:00+05:30</updated>
    <id>http://sandipransing.github.io/2011/12/authorizenet-aim-payment-integration</id>
    <content type="html"><![CDATA[<div class='post'>
Authorize Net (AIM) method enables internet merchants to accept online payments via credit card.<br/>Below post will show you how to integrate authorize net payment gateway inside rails app to accept online payments using activemerchant library.<br/> <pre class=ruby>  # Gemfile   gem 'activemerchant', :require => 'active_merchant' </pre><br/>Register for authorize net sandbox account <a href='https://developer.authorize.net/testaccount/'>click here</a><br/><br/><b>Payment gateway credentials</b><br/><pre class=ruby># config/authorize_net.yml development: &development     mode: test     login: 9gdLh6T     key: 67fu45xw6VP92LX1  production:    <<: *development  test:    <<: *development </pre><br/><b>Payment & creditcard form </b><br/><pre class=ruby># app/views/payments/new = form_for @payment, :url => payments_url do |f|   = f.text_field :amount   = fields_for :creditcard, @creditcard do |cc|     = cc.text_field :name     = cc.text_field :number     = cc.select :month, Date::ABBR_MONTHNAMES.compact.each_with_index.collect{|m, i| [m, i+1]}, {:prompt => 'Select'}     = cc.select :year, Array.new(15){|i| Date.current.year+i}, {:prompt => 'Select'}     = cc.text_field :verification_value   = f.submit 'Pay' </pre><br/><b>Payments Controller </b><br/><pre class=ruby># app/controllers/payments_controller.rb  class PaymentsController < ApplicationController    def new     @payment = Payment.new     @creditcard = ActiveMerchant::Billing::CreditCard.new   end    def create     @payment = Payment.new(params[:payment])     @creditcard = ActiveMerchant::Billing::CreditCard.new(params[:creditcard])     @payment.valid_card = @creditcard.valid?     if @payment.valid?        @payment = @payment.process_payment(@creditcard)       if @payment.success?         @payment.save         flash[:notice] = I18n.t('payment.success')         redirect_to payments_url and return       else         flash[:error] = I18n.t('payment.failed')       end     end     render :action => :new   end end </pre><br/><b>Generate & Migrate Payment Model</b><br/><pre class=ruby>  rails g model payment status:string amount:float transaction_number:string   rake db:migrate </pre><br/><b>Payment Model</b><br/><pre class=ruby># app/models/payment.rb  class Payment < ActiveRecord::Base    PROCESSING, FAILED, SUCCESS = 1, 2, 3    validates :valid_card, :inclusion => {:in => [true], :message => 'Invalid Credit Card'}   validates :amount, :presence => true, :numericality => { :greater_than => 0 }    def process_payment(creditcard)     ActiveMerchant::Billing::Base.mode = auth['mode'].to_sym     self.status = PROCESSING     response = gateway.purchase(amount * 100, creditcard)      if response.success?       self.transaction_number = response.subscription_id       self.status = SUCCESS     else       self.status = FAILED     end     return self   rescue Exception => e     self.status = FAILED     return self   end    def success?     self.status == SUCCESS   end    private   def gateway     ActiveMerchant::Billing::AuthorizeNetGateway.new(       :login    => auth['login'],       :password => auth['key'])   end    def auth     @@auth ||= YAML.load_file("#{Rails.root}/config/authorize_net.yml")[Rails.env]   end end </pre></div>

]]></content>
  </entry>
  
</feed>
