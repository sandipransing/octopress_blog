<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: prawn | Fun On Rails]]></title>
  <link href="http://sandipransing.github.io/blog/categories/prawn/atom.xml" rel="self"/>
  <link href="http://sandipransing.github.io/"/>
  <updated>2014-02-09T20:36:37+05:30</updated>
  <id>http://sandipransing.github.io/</id>
  <author>
    <name><![CDATA[sandipransing]]></name>
    <email><![CDATA[sandip@funonrails.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PDF in rails using prawn library]]></title>
    <link href="http://sandipransing.github.io/2010/08/pdf-in-rails-using-prawn-library"/>
    <updated>2010-08-01T16:45:00+05:30</updated>
    <id>http://sandipransing.github.io/2010/08/pdf-in-rails-using-prawn-library</id>
    <content type="html"><![CDATA[<div class='post'>
Building PDF Document in ruby &amp; rails application using prawn Library<br /><b>Brief</b><br />Before getting started with this tutorial, I would like to thanks <b>Greg and <br />Prawn team</b> for their awesome work towards ruby and rails community. <br />Installing prawn (core, layout, format, security) <br /><code>gem install prawn</code>or <br />Add following line in rails environment file inside initializer block. <code>config.gem 'prawn'</code>Optionally you can specify version to be used and then run task <code>rake gems:install</code>Generating pdf using rails console <code>./script/console pdf = Prawn::Document.new </code>It creates new pdf document object. Here you can additionally pass options parameters such as - <code>Prawn::Document.new(:page_size   =&gt; [11.32, 8.49], :page_layout =&gt; :portrait) Prawn::Document.new(A0) Here A0 is page size. Prawn::Document.new(:page_layout =&gt; :portrait,                      :left_margin =&gt; 10.mm,    # different                      :right_margin =&gt; 1.cm,    # units                      :top_margin =&gt; 0.1.dm,    # work                      :bottom_margin =&gt; 0.01.m, # well                      :page_size =&gt; 'A4')  pdf.text("Prawn Rocks") =&gt; 12  pdf.render_file('prawn.pdf') =&gt; #<file:prawn.pdf (closed)=""></file:prawn.pdf></code>Here is output file generated [<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/prawn.pdf">click</a>] <br />Now let's go through other goodness of prawn. <code>pdf  = Prawn::Document.new('A3') do </code><br /><ol><li>FONTS [<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/font.pdf">click</a>]</li><code># Specify font to be used or specify path to font file. font "times.ttf" font("/times.ttf") </code><li>TEXT [<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/font.pdf">click</a>]</li><code>text 'Sandip Ransing', :size =&gt; 41, :position =&gt; :center, :style =&gt; :bold </code><li>STROKE LINE [<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/stroke.pdf">click</a>]</li><code>stroke do       rectangle [300,300], 100, 200  end </code><li>IMAGE [<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/image.pdf">click</a>]</li>Display Local file system Image <code>image 'sandip.png', :height =&gt; 50, :position =&gt; :center, :border =&gt; 2 </code>Scale Image <code>image 'sandip.png', :scale =&gt; 0.5, :position =&gt; :left </code>Display Remote image from Internet inside pdf <code>require "open-uri"  image open('http://t2.gstatic.com/images?q=tbn:kTG6gAKrnou2gM:http://www.facebook.com/profile/pic.php?uid=AAAAAQAQrLXvTWfyY2ANjttV8D1c0QAAAAnDHPFJe0pPFR84iIzXPKro&amp;t=1") end </code><li>LINE BREAKS</li><code>movedown(20) </code><li>TABLE/GRID [<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/table.pdf">click</a>]</li><code>data = [     ["Name", {:text =&gt; 'Sandip Ransing', :font_style =&gt; :bold, :colspan =&gt; 4 }],     ["Address", {:text =&gt; 'SHIVAJINAGAR, PUNE 411005', :colspan =&gt; 4 }],     ["Landmark",{:text =&gt; 'NEAR FC COLLEGE', :colspan =&gt; 4 }],     ["Mobile","9860648108", {:text =&gt; "", :colspan =&gt; 3 }],     ["Education", {:text =&gt; "Bachelor in Computer Engineering", :colspan =&gt; 4 }],       ["Vehicle", 'Hero Honda',"Reg. No.", {:text =&gt; "MH 12 EN 921", :colspan =&gt; 3 }],       ["Additional", "GDCA", "class", 'First', ""],       [{:text =&gt; "Areas of Speciality", :font_style =&gt; :bold}, {:text =&gt; "Ruby, Rails, Radiant, Asterisk, Adhearsion, Geokit, Prawn, ....,...", :font_style =&gt; :bold, :colspan =&gt; 4}],       [{:text =&gt; "Website", :colspan =&gt; 2},{:text =&gt; "www.funonrails.com", :colspan =&gt; 3}],       [{:text =&gt; "Company", :colspan =&gt; 2},{:text =&gt; "Josh Software", :colspan =&gt; 3}]   ] table data,      :border_style =&gt; :grid, #:underline_header     :font_size  =&gt; 10,      :horizontal_padding =&gt; 6,     :vertical_padding   =&gt; 3,     :border_width =&gt; 0.7,      :column_widths =&gt; { 0 =&gt; 130, 1 =&gt; 100, 2 =&gt; 100, 3 =&gt; 100, 4 =&gt; 80 },      :position =&gt; :left,     :align =&gt; { 0 =&gt; :left, 1 =&gt; :right, 2 =&gt; :left, 3 =&gt; :right, 4 =&gt; :right } </code><li>LINKS [<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/link.pdf">click</a>]</li><code>link_annotation([200, 200, 500, 40],:Border =&gt; [0,0,1], :A =&gt; { :Type =&gt; :Action, :S =&gt; :URI, :URI =&gt; Prawn::LiteralString.new("http://twitter.com/sandipransing") } ) link_annotation(([0, 100, 100, 150]), :Border =&gt; [0,0,1], :Dest =&gt; s"http://funonrails.com") </code><li>PDF Security [<a href="http://github.com/sandipransing/prawn-example/raw/master/sample/secure.pdf">click</a>]</li><code>encrypt_document :user_password =&gt; 'hello', :owner_password =&gt; 'railer',     :permissions =&gt; { :print_document =&gt; false } </code><li>Prawn Inline Formatting</li>Prawn-format supports inline text formatting that gives user enough flexibility to use html tags. <code>require 'prawn/format' text 'This is <b>Strong </b> text', :inline_format =&gt; true text 'This is <b>bold</b> text \n It should be on newline.', :inline_format =&gt; true </code></ol>SAVE PDF File <code>end pdf.render_file 'my.pdf' </code> !!! NOTE: As of time now 'prawn-format' is incompatible with latest prawn gem, It is compatible with prawn version  &lt;= 0.6 s</div>

]]></content>
  </entry>
  
</feed>
